{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NASRIN\\\\Projects\\\\todos_app\\\\client\\\\src\\\\components\\\\project\\\\project.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Project = () => {\n  _s();\n  const {\n    projectId\n  } = useParams();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Project Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Project ID: \", projectId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_s(Project, \"e33EhjYInum2JA3DpcLGJahOhO4=\", false, function () {\n  return [useParams];\n});\n_c = Project;\nexport default Project;\nfunction TaskList() {\n  _s2();\n  const [taskList, setTaskList] = useState([]);\n  const [isAddingNew, setIsAddingNew] = useState(false);\n  const [newTask, setNewTask] = useState('');\n  const getTasks = async () => {\n    try {\n      const {\n        data\n      } = await axios.get('/api/tasks/mytasks');\n      setTaskList(data.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt)));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  useEffect(() => {\n    getTasks();\n  }, []);\n  const addNewButtonClick = () => {\n    setIsAddingNew(!isAddingNew);\n  };\n  const addNewTask = async e => {\n    e.preventDefault();\n    if (newTask.length <= 0) {\n      toast.error('Task is empty');\n      return;\n    }\n    try {\n      const {\n        data\n      } = await axios.post('/api/tasks/', {\n        title: newTask\n      });\n      toast.success('New task added');\n      setIsAddingNew(false);\n      setNewTask('');\n      setTaskList([{\n        ...data\n      }, ...taskList]);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const deleteTask = async id => {\n    try {\n      await axios.delete(`/api/tasks/${id}`);\n      toast.success('Task deleted');\n      setTaskList(taskList.filter(task => task._id !== id));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.topBar,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: classes.addNew,\n        onClick: addNewButtonClick,\n        children: \"Add New\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), isAddingNew && /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.addNewForm,\n      onSubmit: addNewTask,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTask,\n        onChange: e => setNewTask(e.target.value),\n        placeholder: \"Task name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this), taskList.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n      className: classes.taskList_table,\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: taskList.map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n          task: task,\n          deleteTask: deleteTask\n        }, task._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this) : 'No Task Found. Create a new task']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s2(TaskList, \"A7/rXZb3yFKi21lPJxJYCsxjdXY=\");\n_c2 = TaskList;\nvar _c, _c2;\n$RefreshReg$(_c, \"Project\");\n$RefreshReg$(_c2, \"TaskList\");","map":{"version":3,"names":["useParams","axios","React","useState","useEffect","toast","jsxDEV","_jsxDEV","Project","_s","projectId","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","TaskList","_s2","taskList","setTaskList","isAddingNew","setIsAddingNew","newTask","setNewTask","getTasks","data","get","sort","a","b","Date","createdAt","err","console","log","addNewButtonClick","addNewTask","e","preventDefault","length","error","post","title","success","deleteTask","id","delete","filter","task","_id","className","classes","topBar","type","addNew","onClick","addNewForm","onSubmit","value","onChange","target","placeholder","taskList_table","map","TaskItem","_c2","$RefreshReg$"],"sources":["C:/Users/NASRIN/Projects/todos_app/client/src/components/project/project.jsx"],"sourcesContent":["\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\nimport toast from 'react-hot-toast';\r\n\r\nconst Project = () => {\r\n  const { projectId } = useParams();\r\n\r\n  return (\r\n    <div>\r\n      <h2>Project Details</h2>\r\n      <p>Project ID: {projectId}</p>\r\n      {/* Fetch project details using projectId */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Project;\r\n\r\n\r\n\r\n\r\nfunction TaskList() {\r\n  const [taskList, setTaskList] = useState([]);\r\n  const [isAddingNew, setIsAddingNew] = useState(false);\r\n  const [newTask, setNewTask] = useState('');\r\n\r\n  const getTasks = async () => {\r\n    try {\r\n      const { data } = await axios.get('/api/tasks/mytasks');\r\n      setTaskList(\r\n        data.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt)),\r\n      );\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getTasks();\r\n  }, []);\r\n\r\n  const addNewButtonClick = () => {\r\n    setIsAddingNew(!isAddingNew);\r\n  };\r\n\r\n  const addNewTask = async (e) => {\r\n    e.preventDefault();\r\n    if (newTask.length <= 0) {\r\n      toast.error('Task is empty');\r\n      return;\r\n    }\r\n    try {\r\n      const { data } = await axios.post('/api/tasks/', {\r\n        title: newTask,\r\n      });\r\n      toast.success('New task added');\r\n      setIsAddingNew(false);\r\n      setNewTask('');\r\n      setTaskList([{ ...data }, ...taskList]);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const deleteTask = async (id) => {\r\n    try {\r\n      await axios.delete(`/api/tasks/${id}`);\r\n      toast.success('Task deleted');\r\n      setTaskList(taskList.filter((task) => task._id !== id));\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.topBar}>\r\n        <button\r\n          type=\"button\"\r\n          className={classes.addNew}\r\n          onClick={addNewButtonClick}\r\n        >\r\n          Add New\r\n        </button>\r\n      </div>\r\n      {isAddingNew && (\r\n        <form className={classes.addNewForm} onSubmit={addNewTask}>\r\n          <input\r\n            type=\"text\"\r\n            value={newTask}\r\n            onChange={(e) => setNewTask(e.target.value)}\r\n            placeholder=\"Task name\"\r\n          />\r\n          <button type=\"submit\">Add</button>\r\n        </form>\r\n      )}\r\n      {taskList.length > 0 ? (\r\n        <table className={classes.taskList_table}>\r\n          <tbody>\r\n            {taskList.map((task) => (\r\n              <TaskItem key={task._id} task={task} deleteTask={deleteTask} />\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      ) : (\r\n        'No Task Found. Create a new task'\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n"],"mappings":";;;AACA,SAASA,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM;IAAEC;EAAU,CAAC,GAAGV,SAAS,CAAC,CAAC;EAEjC,oBACEO,OAAA;IAAAI,QAAA,gBACEJ,OAAA;MAAAI,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBR,OAAA;MAAAI,QAAA,GAAG,cAAY,EAACD,SAAS;IAAA;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE3B,CAAC;AAEV,CAAC;AAACN,EAAA,CAVID,OAAO;EAAA,QACWR,SAAS;AAAA;AAAAgB,EAAA,GAD3BR,OAAO;AAYb,eAAeA,OAAO;AAKtB,SAASS,QAAQA,CAAA,EAAG;EAAAC,GAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACkB,WAAW,EAAEC,cAAc,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACoB,OAAO,EAAEC,UAAU,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMsB,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACF,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMzB,KAAK,CAAC0B,GAAG,CAAC,oBAAoB,CAAC;MACtDP,WAAW,CACTM,IAAI,CAACE,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIC,IAAI,CAACD,CAAC,CAACE,SAAS,CAAC,GAAG,IAAID,IAAI,CAACF,CAAC,CAACG,SAAS,CAAC,CACnE,CAAC;IACH,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB;EACF,CAAC;EAED7B,SAAS,CAAC,MAAM;IACdqB,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMW,iBAAiB,GAAGA,CAAA,KAAM;IAC9Bd,cAAc,CAAC,CAACD,WAAW,CAAC;EAC9B,CAAC;EAED,MAAMgB,UAAU,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIhB,OAAO,CAACiB,MAAM,IAAI,CAAC,EAAE;MACvBnC,KAAK,CAACoC,KAAK,CAAC,eAAe,CAAC;MAC5B;IACF;IACA,IAAI;MACF,MAAM;QAAEf;MAAK,CAAC,GAAG,MAAMzB,KAAK,CAACyC,IAAI,CAAC,aAAa,EAAE;QAC/CC,KAAK,EAAEpB;MACT,CAAC,CAAC;MACFlB,KAAK,CAACuC,OAAO,CAAC,gBAAgB,CAAC;MAC/BtB,cAAc,CAAC,KAAK,CAAC;MACrBE,UAAU,CAAC,EAAE,CAAC;MACdJ,WAAW,CAAC,CAAC;QAAE,GAAGM;MAAK,CAAC,EAAE,GAAGP,QAAQ,CAAC,CAAC;IACzC,CAAC,CAAC,OAAOc,GAAG,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB;EACF,CAAC;EAED,MAAMY,UAAU,GAAG,MAAOC,EAAE,IAAK;IAC/B,IAAI;MACF,MAAM7C,KAAK,CAAC8C,MAAM,CAAE,cAAaD,EAAG,EAAC,CAAC;MACtCzC,KAAK,CAACuC,OAAO,CAAC,cAAc,CAAC;MAC7BxB,WAAW,CAACD,QAAQ,CAAC6B,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,GAAG,KAAKJ,EAAE,CAAC,CAAC;IACzD,CAAC,CAAC,OAAOb,GAAG,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB;EACF,CAAC;EAED,oBACE1B,OAAA;IAAAI,QAAA,gBACEJ,OAAA;MAAK4C,SAAS,EAAEC,OAAO,CAACC,MAAO;MAAA1C,QAAA,eAC7BJ,OAAA;QACE+C,IAAI,EAAC,QAAQ;QACbH,SAAS,EAAEC,OAAO,CAACG,MAAO;QAC1BC,OAAO,EAAEpB,iBAAkB;QAAAzB,QAAA,EAC5B;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EACLM,WAAW,iBACVd,OAAA;MAAM4C,SAAS,EAAEC,OAAO,CAACK,UAAW;MAACC,QAAQ,EAAErB,UAAW;MAAA1B,QAAA,gBACxDJ,OAAA;QACE+C,IAAI,EAAC,MAAM;QACXK,KAAK,EAAEpC,OAAQ;QACfqC,QAAQ,EAAGtB,CAAC,IAAKd,UAAU,CAACc,CAAC,CAACuB,MAAM,CAACF,KAAK,CAAE;QAC5CG,WAAW,EAAC;MAAW;QAAAlD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eACFR,OAAA;QAAQ+C,IAAI,EAAC,QAAQ;QAAA3C,QAAA,EAAC;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CACP,EACAI,QAAQ,CAACqB,MAAM,GAAG,CAAC,gBAClBjC,OAAA;MAAO4C,SAAS,EAAEC,OAAO,CAACW,cAAe;MAAApD,QAAA,eACvCJ,OAAA;QAAAI,QAAA,EACGQ,QAAQ,CAAC6C,GAAG,CAAEf,IAAI,iBACjB1C,OAAA,CAAC0D,QAAQ;UAAgBhB,IAAI,EAAEA,IAAK;UAACJ,UAAU,EAAEA;QAAW,GAA7CI,IAAI,CAACC,GAAG;UAAAtC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAuC,CAC/D;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,GAER,kCACD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACG,GAAA,CAxFQD,QAAQ;AAAAiD,GAAA,GAARjD,QAAQ;AAAA,IAAAD,EAAA,EAAAkD,GAAA;AAAAC,YAAA,CAAAnD,EAAA;AAAAmD,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}