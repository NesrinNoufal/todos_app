{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NASRIN\\\\Projects\\\\todos_app\\\\client\\\\src\\\\components\\\\todoItem\\\\todoItem.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport moment from 'moment';\nimport axios from 'axios';\nimport toast from 'react-hot-toast';\nimport classes from './todoItem.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoItem({\n  todo,\n  deleteTodo\n}) {\n  _s();\n  const [isCompleted, setIsCompleted] = useState(task.completed);\n  const [isLoading, setIsLoading] = useState(false);\n  const handleCheckboxClick = async () => {\n    try {\n      setIsLoading(true);\n      await axios.put(`/api/todos/${todo._id}`, {\n        completed: !isCompleted\n      });\n      setIsCompleted(!isCompleted);\n      toast.success('Todo updated successfully');\n    } catch (err) {\n      console.log(err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    className: classes.task_item,\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      className: classes.task_name,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.checkbox,\n        onChange: handleCheckboxClick,\n        role: \"checkbox\",\n        \"aria-checked\": true,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: isCompleted,\n          disabled: isLoading,\n          readOnly: true,\n          tabIndex: -1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: todo.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: isCompleted ? 'Complete' : 'Incomplete'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: moment(todo.createdAt).format('MMM Do YY')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: classes.deleteBtn,\n        onClick: () => deleteTodo(todo._id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoItem, \"ti+h91U0XQPrg0wf5cW2HXckHBM=\");\n_c = TodoItem;\nexport default TodoItem;\nvar _c;\n$RefreshReg$(_c, \"TodoItem\");","map":{"version":3,"names":["React","useState","moment","axios","toast","classes","jsxDEV","_jsxDEV","TodoItem","todo","deleteTodo","_s","isCompleted","setIsCompleted","task","completed","isLoading","setIsLoading","handleCheckboxClick","put","_id","success","err","console","log","className","task_item","children","task_name","checkbox","onChange","role","type","checked","disabled","readOnly","tabIndex","fileName","_jsxFileName","lineNumber","columnNumber","title","createdAt","format","deleteBtn","onClick","_c","$RefreshReg$"],"sources":["C:/Users/NASRIN/Projects/todos_app/client/src/components/todoItem/todoItem.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport moment from 'moment';\r\nimport axios from 'axios';\r\nimport toast from 'react-hot-toast';\r\nimport classes from './todoItem.css';\r\n\r\nfunction TodoItem({ todo, deleteTodo }) {\r\n  const [isCompleted, setIsCompleted] = useState(task.completed);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const handleCheckboxClick = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      await axios.put(`/api/todos/${todo._id}`, {\r\n        completed: !isCompleted,\r\n      });\r\n      setIsCompleted(!isCompleted);\r\n      toast.success('Todo updated successfully');\r\n    } catch (err) {\r\n      console.log(err);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <tr className={classes.task_item}>\r\n      <td className={classes.task_name}>\r\n        <div className={classes.checkbox} onChange={handleCheckboxClick} role=\"checkbox\" aria-checked>\r\n          <input type=\"checkbox\" checked={isCompleted} disabled={isLoading} readOnly tabIndex={-1} />\r\n        </div>\r\n        <p>{todo.title}</p>\r\n      </td>\r\n      <td>{isCompleted ? 'Complete' : 'Incomplete'}</td>\r\n      <td>{moment(todo.createdAt).format('MMM Do YY')}</td>\r\n      <td>\r\n        <button\r\n          type=\"button\"\r\n          className={classes.deleteBtn}\r\n          onClick={() => deleteTodo(todo._id)}\r\n        >\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default TodoItem;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}