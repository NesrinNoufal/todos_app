{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NASRIN\\\\Projects\\\\todos_app\\\\client\\\\src\\\\components\\\\project\\\\project.jsx\",\n  _s2 = $RefreshSig$();\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Project = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const {\n    projectId\n  } = useParams();\n  const [newTodo, setNewTodo] = useState('');\n  const [todoList, setTodoList] = useState([]);\n  const handleAddTodo = async () => {\n    _s();\n    try {\n      const {\n        projectId\n      } = useParams();\n      const response = await fetch('http://localhost:5000/api/todos/addTodo', {\n        projectId\n      }, {\n        method: 'POST',\n        // headers: {\n        //     'Content-Type': 'application/json',\n        //     '\n        // },\n        body: JSON.stringify({\n          title: newTodo\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const responseData = await response.json();\n      console.log('Todo added successfully:', responseData);\n\n      // Optionally, clear the input field after successful submission\n      setNewTodo(\"\");\n    } catch (error) {\n      console.error('Error adding project:', error.message);\n      // You can display an error message to the user if needed\n    }\n  };\n  _s(handleAddTodo, \"e33EhjYInum2JA3DpcLGJahOhO4=\", false, function () {\n    return [useParams];\n  });\n  const getTasks = async () => {\n    try {\n      const {\n        data\n      } = await axios.get('/api/tasks/getTodos');\n      setTodoList(data.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt)));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  useEffect(() => {\n    getTasks();\n  }, []);\n  const deleteTask = async id => {\n    try {\n      await axios.delete(`/api/todos/${id}`);\n      toast.success('Todo deleted');\n      setTodoList(todoList.filter(todo => todo._id !== id));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return (\n    /*#__PURE__*/\n    // <div>\n    //   <h2>Project Details</h2>\n    //   <p>Project ID: {projectId}</p>\n    //   {/* Fetch project details using projectId */}\n    // </div>\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create_form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter todo Name\",\n          onChange: e => setNewTodo(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleAddTodo,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 3\n      }, this), todoList.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n        className: classes.taskList_table,\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: todoList.map(todo => /*#__PURE__*/_jsxDEV(TodoItem, {\n            todo: todo,\n            deleteTodo: deleteTodo\n          }, todo._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 9\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 3\n      }, this) : 'No Todo Found. Create a new todo']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 1\n    }, this)\n  );\n};\n_s2(Project, \"2UNdXuGoVAchkwxrbLWH+xkKP5E=\", false, function () {\n  return [useParams];\n});\n_c = Project;\nexport default Project;\nvar _c;\n$RefreshReg$(_c, \"Project\");","map":{"version":3,"names":["useParams","axios","React","useState","useEffect","toast","jsxDEV","_jsxDEV","Project","_s2","_s","$RefreshSig$","projectId","newTodo","setNewTodo","todoList","setTodoList","handleAddTodo","response","fetch","method","body","JSON","stringify","title","ok","Error","status","responseData","json","console","log","error","message","getTasks","data","get","sort","a","b","Date","createdAt","err","deleteTask","id","delete","success","filter","todo","_id","children","className","type","placeholder","onChange","e","target","value","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","classes","taskList_table","map","TodoItem","deleteTodo","_c","$RefreshReg$"],"sources":["C:/Users/NASRIN/Projects/todos_app/client/src/components/project/project.jsx"],"sourcesContent":["\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\nimport toast from 'react-hot-toast';\r\n\r\nconst Project = () => {\r\n  const { projectId } = useParams();\r\n  const [newTodo, setNewTodo] = useState('');\r\n  const [todoList, setTodoList] = useState([]);\r\n\r\n  const handleAddTodo = async () => {\r\n    try {\r\n        \r\n        const { projectId } = useParams();\r\n        const response = await fetch('http://localhost:5000/api/todos/addTodo', {projectId},{\r\n            method: 'POST',\r\n            // headers: {\r\n            //     'Content-Type': 'application/json',\r\n            //     '\r\n            // },\r\n            body: JSON.stringify({ title: newTodo })\r\n        });\r\n\r\n        if (!response.ok) {\r\n            throw new Error(`HTTP error! Status: ${response.status}`);\r\n        }\r\n\r\n        const responseData = await response.json();\r\n        console.log('Todo added successfully:', responseData);\r\n\r\n        // Optionally, clear the input field after successful submission\r\n        setNewTodo(\"\");\r\n    } catch (error) {\r\n        console.error('Error adding project:', error.message);\r\n        // You can display an error message to the user if needed\r\n    }\r\n};\r\n\r\nconst getTasks = async () => {\r\n    try {\r\n      const { data } = await axios.get('/api/tasks/getTodos');\r\n      setTodoList(\r\n        data.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt)),\r\n      );\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getTasks();\r\n  }, []);\r\n\r\n\r\n  const deleteTask = async (id) => {\r\n    try {\r\n      await axios.delete(`/api/todos/${id}`);\r\n      toast.success('Todo deleted');\r\n      setTodoList(todoList.filter((todo) => todo._id !== id));\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    // <div>\r\n    //   <h2>Project Details</h2>\r\n    //   <p>Project ID: {projectId}</p>\r\n    //   {/* Fetch project details using projectId */}\r\n    // </div>\r\n\r\n<div>\r\n\r\n  <div className='create_form'>\r\n  <input type=\"text\" placeholder='Enter todo Name' onChange={(e) => setNewTodo(e.target.value)}/>\r\n  <button type=\"button\" onClick={handleAddTodo}>Add</button>\r\n\r\n</div>\r\n\r\n\r\n\r\n{todoList.length > 0 ? (\r\n  <table className={classes.taskList_table}>\r\n    <tbody>\r\n      {todoList.map((todo) => (\r\n        <TodoItem key={todo._id} todo={todo} deleteTodo={deleteTodo} />\r\n      ))}\r\n    </tbody>\r\n  </table>\r\n) : (\r\n  'No Todo Found. Create a new todo'\r\n)}\r\n</div>\r\n);\r\n}\r\n  \r\n\r\nexport default Project;\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}