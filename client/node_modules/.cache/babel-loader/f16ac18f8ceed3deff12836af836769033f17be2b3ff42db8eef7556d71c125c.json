{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NASRIN\\\\Projects\\\\todos_app\\\\client\\\\src\\\\components\\\\AddProject\\\\AddProject.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './AddProject.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddProject = () => {\n  _s();\n  const [newProject, setNewProject] = useState(\"\");\n  //   const handleAddProject = async () => {\n  //     try {\n  //         // Make a POST request to your backend API endpoint\n  //         const response = await axios.post(\n  //             'http://localhost:3000/api/projects/addProject',\n  //             { title: newProject },\n  //             { headers: { 'auth-token': localStorage.getItem('token') } } // Assuming you have a token stored in localStorage\n  //         );\n\n  //         // Log the response or handle success\n  //         console.log('Project added successfully:', response.data);\n\n  //         // Optionally, clear the input field after successful submission\n  //         setNewProject(\"\");\n  //     } catch (error) {\n  //         // Handle errors from the API request\n  //         console.error('Error adding project:', error);\n  //         // You can display an error message to the user if needed\n  //     }\n  // };\n\n  const handleAddProject = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      console.log(\"token\", token);\n      if (!token) {\n        console.error('Authentication token not found');\n        return;\n      }\n      const response = await fetch('http://localhost:5000/api/projects/addProject', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'auth-token': token\n        },\n        body: JSON.stringify({\n          title: newProject\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const responseData = await response.json();\n      console.log('Project added successfully:', responseData);\n\n      // Optionally, clear the input field after successful submission\n      setNewProject('');\n      setProjects([{\n        ...data\n      }, ...taskList]);\n    } catch (error) {\n      console.error('Error adding project:', error.message);\n      // You can display an error message to the user if needed\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create_form\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter Project Name\",\n      onChange: e => setNewProject(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleAddProject,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(AddProject, \"RjT1c956s7YTbfNrOQqd3fFTqiw=\");\n_c = AddProject;\nexport default AddProject;\n\n// axios.post('http://localhost:3000/api/projects/addProject' , {title:newProject} )\n// .then(result => console.log(result))\n// .catch(err => console.log(err))\nvar _c;\n$RefreshReg$(_c, \"AddProject\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","AddProject","_s","newProject","setNewProject","handleAddProject","token","localStorage","getItem","console","log","error","response","fetch","method","headers","body","JSON","stringify","title","ok","Error","status","responseData","json","setProjects","data","taskList","message","className","children","type","placeholder","onChange","e","target","value","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/NASRIN/Projects/todos_app/client/src/components/AddProject/AddProject.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport axios from 'axios'\r\nimport './AddProject.css';\r\n\r\nconst AddProject = () => {\r\n    const [newProject, setNewProject] = useState(\"\")\r\n  //   const handleAddProject = async () => {\r\n  //     try {\r\n  //         // Make a POST request to your backend API endpoint\r\n  //         const response = await axios.post(\r\n  //             'http://localhost:3000/api/projects/addProject',\r\n  //             { title: newProject },\r\n  //             { headers: { 'auth-token': localStorage.getItem('token') } } // Assuming you have a token stored in localStorage\r\n  //         );\r\n\r\n  //         // Log the response or handle success\r\n  //         console.log('Project added successfully:', response.data);\r\n\r\n  //         // Optionally, clear the input field after successful submission\r\n  //         setNewProject(\"\");\r\n  //     } catch (error) {\r\n  //         // Handle errors from the API request\r\n  //         console.error('Error adding project:', error);\r\n  //         // You can display an error message to the user if needed\r\n  //     }\r\n  // };\r\n\r\n  const handleAddProject = async () => {\r\n    try {\r\n        const token = localStorage.getItem('token');\r\n        console.log(\"token\",token);\r\n        if (!token) {\r\n            console.error('Authentication token not found');\r\n            return;\r\n        }\r\n\r\n        const response = await fetch('http://localhost:5000/api/projects/addProject', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'auth-token': token\r\n            },\r\n            body: JSON.stringify({ title: newProject })\r\n        });\r\n\r\n        if (!response.ok) {\r\n            throw new Error(`HTTP error! Status: ${response.status}`);\r\n        }\r\n\r\n        const responseData = await response.json();\r\n        console.log('Project added successfully:', responseData);\r\n\r\n        // Optionally, clear the input field after successful submission\r\n        setNewProject('');\r\n        setProjects([{ ...data }, ...taskList]);\r\n    } catch (error) {\r\n        console.error('Error adding project:', error.message);\r\n        // You can display an error message to the user if needed\r\n    }\r\n};\r\n\r\n\r\n\r\n  return (\r\n    <div className='create_form'>\r\n        <input type=\"text\" placeholder='Enter Project Name' onChange={(e) => setNewProject(e.target.value)}/>\r\n        <button type=\"button\" onClick={handleAddProject}>Add</button>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddProject\r\n\r\n\r\n // axios.post('http://localhost:3000/api/projects/addProject' , {title:newProject} )\r\n        // .then(result => console.log(result))\r\n        // .catch(err => console.log(err))\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAClD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMQ,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3CC,OAAO,CAACC,GAAG,CAAC,OAAO,EAACJ,KAAK,CAAC;MAC1B,IAAI,CAACA,KAAK,EAAE;QACRG,OAAO,CAACE,KAAK,CAAC,gCAAgC,CAAC;QAC/C;MACJ;MAEA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+CAA+C,EAAE;QAC1EC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE,kBAAkB;UAClC,YAAY,EAAET;QAClB,CAAC;QACDU,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,KAAK,EAAEhB;QAAW,CAAC;MAC9C,CAAC,CAAC;MAEF,IAAI,CAACS,QAAQ,CAACQ,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAE,uBAAsBT,QAAQ,CAACU,MAAO,EAAC,CAAC;MAC7D;MAEA,MAAMC,YAAY,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;MAC1Cf,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEa,YAAY,CAAC;;MAExD;MACAnB,aAAa,CAAC,EAAE,CAAC;MACjBqB,WAAW,CAAC,CAAC;QAAE,GAAGC;MAAK,CAAC,EAAE,GAAGC,QAAQ,CAAC,CAAC;IAC3C,CAAC,CAAC,OAAOhB,KAAK,EAAE;MACZF,OAAO,CAACE,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAACiB,OAAO,CAAC;MACrD;IACJ;EACJ,CAAC;EAIC,oBACE5B,OAAA;IAAK6B,SAAS,EAAC,aAAa;IAAAC,QAAA,gBACxB9B,OAAA;MAAO+B,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC,oBAAoB;MAACC,QAAQ,EAAGC,CAAC,IAAK9B,aAAa,CAAC8B,CAAC,CAACC,MAAM,CAACC,KAAK;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACrGxC,OAAA;MAAQ+B,IAAI,EAAC,QAAQ;MAACU,OAAO,EAAEpC,gBAAiB;MAAAyB,QAAA,EAAC;IAAG;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE5D,CAAC;AAEV,CAAC;AAAAtC,EAAA,CAlEKD,UAAU;AAAAyC,EAAA,GAAVzC,UAAU;AAoEhB,eAAeA,UAAU;;AAGxB;AACO;AACA;AAAA,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}